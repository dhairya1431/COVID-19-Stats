{"version":3,"sources":["Components/Cards/cards.module.css","API/index.js","Components/Cards/cards.js","Components/Chart/chart.js","Components/CountryPicker/countrypicker.js","App.js","index.js","App.module.css","Components/Chart/chart.module.css","Components/CountryPicker/countrypicker.module.css","Images/image.png"],"names":["module","exports","url","fetchdata","country","a","changedurl","axios","get","data","confirmed","recovered","deaths","lastUpdate","newdata","lastupdate","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","cards","passingdata","className","style","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","Chart","useState","dailydata","setdailydata","useEffect","fetchAPI","linechart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","Countrypicker","handleCountryChange","setCountries","console","log","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","props","fetchedata","setState","state","this","src","image","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ffd8531.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cards_container__3vrL4\",\"card\":\"cards_card__2iifX\",\"confirmed\":\"cards_confirmed__3daKt\",\"recovered\":\"cards_recovered__3q0ax\",\"deaths\":\"cards_deaths__1LORz\"};","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api'\r\n\r\nexport  const fetchdata = async (country) => {\r\n\r\n  let changedurl = url;\r\n  if(country && country !== 'global') {\r\n    changedurl = `${url}/countries/${country}`\r\n  }\r\n\r\n    try {\r\n        const { data : { confirmed , recovered , deaths , lastUpdate} }  = await axios.get(changedurl)\r\n\r\n        const newdata = {\r\n            confirmed : confirmed,\r\n            recovered: recovered,\r\n            deaths: deaths,\r\n            lastupdate: lastUpdate,\r\n        }\r\n\r\n        return newdata;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nconst url1 = 'https://covid19.mathdro.id/api/daily'\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n      const { data } = await axios.get(url1);\r\n  \r\n      return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  export const fetchCountries = async () => {\r\n    try {\r\n      const { data: { countries } } = await axios.get(`${url}/countries`);\r\n  \r\n      return countries.map((country) => country.name);\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n","import React from 'react'\r\nimport { Card , CardContent , Typography , Grid} from '@material-ui/core'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\nimport style from './cards.module.css'\r\n\r\nfunction cards({passingdata : {confirmed , recovered , deaths , lastupdate }}) {\r\n\r\n    if(!confirmed ) {\r\n        return 'Loading..'\r\n    }\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <Grid container spacing = {3} justify=\"center\" >\r\n                <Grid item component={Card} xs={12} md={3} className={cx(style.card,style.confirmed)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom> Infected </Typography>\r\n                        <Typography variant=\"h5\"> \r\n                        <CountUp\r\n                            start = {0} end={confirmed.value} duration={2} separator=\",\"\r\n                        />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\"> {new Date(lastupdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19 </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(style.card,style.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom> Recovered</Typography>\r\n                        <Typography variant=\"h5\"> \r\n                        <CountUp\r\n                            start = {0} end={recovered.value}  duration={2} separator=\",\"\r\n                        />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\"> {new Date(lastupdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recovories Of COVID-19 </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(style.card,style.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom> Deaths </Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp\r\n                            start = {0} end={deaths.value}  duration={2} separator=\",\"\r\n                        />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\"> {new Date(lastupdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths cause by the COVID-19 </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default cards\r\n","import React , {useState , useEffect} from 'react'\r\nimport {fetchDailyData } from '../../API'\r\nimport {Line ,  Bar} from 'react-chartjs-2'\r\nimport style from './chart.module.css'\r\n\r\nimport axios from 'axios'\r\n\r\nfunction Chart({data : {confirmed , recovered , deaths}, country}) {\r\n\r\n    const [ dailydata , setdailydata] = useState([])\r\n    \r\n\r\n    useEffect( () => {\r\n        const fetchAPI = async () => {\r\n            setdailydata(await fetchDailyData())\r\n            //console.log(dailydata)\r\n        }\r\n        fetchAPI()\r\n\r\n    },[])\r\n\r\n    const linechart = (\r\n        dailydata.length ? (\r\n            <Line\r\n            data = { {\r\n                labels: dailydata.map(( { date })=> date),\r\n                datasets: [{\r\n                    data : dailydata.map(( { confirmed })=> confirmed),\r\n                    label :  'Infected',\r\n                    borderColor: \"#3333ff\",\r\n                    fill : true,\r\n                },{\r\n                    data : dailydata.map(( { deaths })=> deaths),\r\n                    label :  'Deaths',\r\n                    borderColor: \"red\",\r\n                    backgroundColor: 'rgba(255,0,0,0.5)',\r\n                    fill : true,\r\n                }]\r\n            }}\r\n            />) : null\r\n        \r\n    )\r\n\r\n    const barChart = (\r\n        confirmed ? (\r\n          <Bar\r\n            data={{\r\n              labels: ['Infected', 'Recovered', 'Deaths'],\r\n              datasets: [\r\n                {\r\n                  label: 'People',\r\n                  backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                  data: [confirmed.value, recovered.value, deaths.value],\r\n                },\r\n              ],\r\n            }}\r\n            options={{\r\n              legend: { display: false },\r\n              title: { display: true, text: `Current state in ${country}` },\r\n            }}\r\n          />\r\n        ) : null\r\n      );\r\n    return (\r\n        <div className={style.container}>\r\n            {country ? barChart : linechart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","import React , {useState , useEffect} from 'react'\r\nimport { NativeSelect , FormControl } from '@material-ui/core'\r\nimport style from './countrypicker.module.css'\r\nimport {fetchCountries} from '../../API'\r\nimport axios from 'axios'\r\n\r\nexport default function Countrypicker({handleCountryChange}) {\r\n   // const [fetchedCountries , setfetchedCountries] = useState([])\r\n    const [countries, setCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n      const fetchAPI = async () => {\r\n        setCountries(await fetchCountries());\r\n      };\r\n      console.log(countries)\r\n      fetchAPI();\r\n    }, []);\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <FormControl className={style.formControl}>\r\n                <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                    <option value=\"global\">Global</option>\r\n                    {\r\n                            countries.map((country, i) => <option key={i} value={country}>{country}</option>)\r\n                    }\r\n                </NativeSelect>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport style from './App.module.css'\r\nimport {fetchdata} from './API'\r\n\r\nimport Cards from './Components/Cards/cards'\r\nimport Chart from './Components/Chart/chart'\r\nimport Countrypicker from './Components/CountryPicker/countrypicker'\r\nimport image from './Images/image.png'\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             data : {},\r\n             country: ''\r\n        }\r\n    }\r\n    \r\n    handleCountryChange = async (country) =>{\r\n        const fetchedata = await fetchdata(country);\r\n        console.log(fetchedata)\r\n\r\n        this.setState({data : fetchedata, country : country})\r\n    }\r\n    async componentDidMount() {\r\n        const fetchedata = await fetchdata();\r\n        \r\n        this.setState({\r\n            data : fetchedata\r\n        })\r\n      \r\n        \r\n    }\r\n\r\n    render() {\r\n        const { data , country }= this.state\r\n        return (\r\n            <div className={style.container}>\r\n\r\n                <img  src={image} className={style.image}/>\r\n\r\n                <Cards passingdata={data}/>\r\n                \r\n                <Countrypicker handleCountryChange = {this.handleCountryChange}/>\r\n                    \r\n                <Chart data={data} country={country}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3TWsd\",\"image\":\"App_image__lXIbw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chart_container__1p2J2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"countrypicker_formControl__1sgyE\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}